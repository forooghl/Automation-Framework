---
- name: Add Grafana APT key
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present
    update_cache: yes

- name: Install Grafana
  apt:
    name: grafana
    state: present

- name: Ensure Grafana is running
  service:
    name: grafana-server
    state: started
    enabled: yes

- name: Wait for Grafana to initialize
  wait_for:
    port: 3000
    delay: 10
    timeout: 30

- name: Configure Prometheus datasource (Idempotent)
  uri:
    url: "http://localhost:3000/api/datasources/name/Prometheus"
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ grafana_api_token }}"
    status_code: 200,404
    timeout: 5
  register: datasource_check
  ignore_errors: true

- name: Create or update Prometheus datasource
  uri:
    url: "http://localhost:3000/api/datasources/{{ (datasource_check.status == 200) | ternary(datasource_check.json.id, '') }}"
    method: "{{ (datasource_check.status == 200) | ternary('PUT', 'POST') }}"
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ grafana_api_token }}"
    body_format: json
    body:
      name: "Prometheus"
      type: "prometheus"
      url: "http://localhost:9090"
      access: "proxy"
      isDefault: true
    status_code: 200
    timeout: 5
  register: grafana_datasource
  until: grafana_datasource.status == 200
  retries: 5
  delay: 10

- name: Download Node Exporter dashboard JSON file
  get_url:
    url: https://grafana.com/api/dashboards/1860/revisions/28/download
    dest: /tmp/node_exporter.json

- name: Read Node Exporter dashboard JSON
  slurp:
    src: /tmp/node_exporter.json
  register: node_exporter_raw

- name: Parse Node Exporter dashboard JSON
  set_fact:
    node_exporter_dashboard: "{{ node_exporter_raw.content | b64decode | from_json }}"

- name: Import Node Exporter dashboard
  uri:
    url: "http://localhost:3000/api/dashboards/import"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ grafana_api_token }}"
    body_format: json
    body:
      dashboard: "{{ node_exporter_dashboard }}"
      inputs:
        - name: "DS_PROMETHEUS"
          type: "datasource"
          pluginId: "prometheus"
          value: "Prometheus"
      folderId: 0
      overwrite: true
    status_code: 200
    timeout: 30

- name: Download SNMP dashboard JSON file
  get_url:
    url: https://grafana.com/api/dashboards/21962/revisions/1/download
    dest: /tmp/snmp_dashboard.json

- name: Read SNMP dashboard JSON
  slurp:
    src: /tmp/snmp_dashboard.json
  register: snmp_dashboard_raw

- name: Parse SNMP dashboard JSON
  set_fact:
    snmp_dashboard: "{{ snmp_dashboard_raw.content | b64decode | from_json }}"

- name: Import SNMP dashboard into Grafana
  uri:
    url: "http://localhost:3000/api/dashboards/import"
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ grafana_api_token }}"
    body_format: json
    body:
      dashboard: "{{ snmp_dashboard }}"
      inputs:
        - name: "DS_PROMETHEUS"
          type: "datasource"
          pluginId: "prometheus"
          value: "Prometheus"
      folderId: 0
      overwrite: true
    status_code: 200
    timeout: 30